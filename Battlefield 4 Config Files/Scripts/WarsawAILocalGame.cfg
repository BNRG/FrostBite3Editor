--
-- Helper config file which could be useful generally, but is right now targeted at Warsaw AI developers.
-- Example localgame.cfg
--
-----------------------------------------------
--#!/bin/lua
--
--cfg = {
--	level = 'airf,beach', -- format <level-substring>[,<startpoint-substring>]
--	
--	remoteDesktop = 0,
--	aiDev = 1,
--	onlineDevelopment = 1,
--	scriptedPlaythrough = 0,
--	cheatAllUnlocks = 1,
--
--	extra = [=[
--		Game.IsGodMode 1
--	]=]
--}
--
--cfgPs3 = {
--	noLogging = 1,
--
--	extra = [=[
--	]=]
--}
--
--dofile("Scripts/WarsawAILocalGame.cfg")
-----------------------------------------------

-----------------------------------------------------------------

-- List of common levels and start points here. cfg.level will search throught
local levels = {
	{ 'Levels/SP/SP_Airfield/SP_Airfield', { 'Ocean', 'Beach_Landing', 'Park_Area', 'UnderWater_Scene', 'Office_Complex_flankers', 'Traffic_Bridge'} },
	{ 'Levels/SP/SP_Dam/SP_Dam', { "Level_Start","DamA_CityEntryEncounter","DamA_OuterCityReachEncounter","DamA_InnerCityReachEncounter","DamA_BridgeVistaScene","DamA_BridgeBattleEncounter","DamA_GetToEncampmentScene","DamB_MotorbikeRide","DamB_InfiltrateDam","DamB_InsideDam","DamB_DamBombPlacement","DamB_DamEscape","DamB_MudSlide","DamC_WashedUpEncounter","DamC_SquadRegroupScene","DamC_FloodedCityEncounter","DamC_RetakingTeAirfieldEncounter","DamC_LeavingTheCity"} },
	{ 'Levels/SP/SP_Shanghai/SP_Shanghai', { } },
	{ 'Levels/SP/SP_Prison/SP_Prison', {"A:_Torture_Scene","A:_Prison_Introduction","A:_Knife_Fight_Scene","A:_Dima_Walkthrough","A:_Gear_Up_Encounter","A:_Maintenance_Area_Encounter","A:_Cut_the_Power_Event","A:_Manual_Lock_Encounter","A:_Molotov_Encounter","B:_Prisoner_processing_room","A:_Return_to_Cellblock","B:_monitor_room","A:_Bohai_Assault","B:_torture_hallway","B:_empty_torture_hallway","B:_reception_tear_gas","B:_kitchen_explosion","B:_hanna_&_irish_torture_hall","B:_ventilation_exit","C:_Kitchen_Exit","C:_rappel_scene","C:_the_slide","C:_Helipad_reach","C:_tram_attack","C:_tram_defend","C:_Tram_Descent","C:_Tram_Crash"} },
	{ 'Levels/SP/SP_Naval/SP_Naval', {"Level_Start","NavalA_MedBay","NavalA_IrishMeeting","NavalA_GarrisonBriefing","NavalA_RHIB_Entry","NavalB_TitanEntryPoint","NavalB_SwimmingTutorial","NavalB_SurvivorsScene","NavalB_FloodedCorridor","NavalB_PRE_TiltedHangar","NavalB_POST_TiltedHangar","NavalB_HullScene","NavalB_IntelRoomScene","NavalB_IntelEncounter","NavalB_HullBreachEncounter","NavalC_Battle_TitanFlightDeckEncounterOne","NavalC_Battle_SeaBattle","NavalC_WellDeckEncounter","NavalC_MidDeckEncounter","NavalC_FlightDeckEncounterOne","NavalC_BridgeScene"} },
	{ 'Levels/SP/SP_Prologue/SP_Prologue', {"Construction_Site_Encounter", "Safe_House_scene"}},
	{ 'Levels/SP/SP_Journey/SP_Journey', {}},
	{ 'Levels/Test/Sp_Core_Design_Enemy_Archetypes/Sp_Core_Design_Enemy_Archetypes', { } },
	{ 'Levels/Test/Sp_Core_Design_Squad/Sp_Core_Design_Squad', { } },
	{ 'Levels/Test/Testrange_AI2/Testrange_AI2', { } },
	{ 'Levels/Test/Testrange_CannedAnimations/Testrange_CannedAnimations', { } },
	{ 'Levels/Test/Testrange_BugRepro/Testrange_BugRepro', {'WAR-3868' } },
	{ 'Levels/Test/AutoSmoke_AI/AutoSmoke_AI', { } },
	{ 'Levels/MP/MP_Siege/MP_Siege', { } },
	{ 'Levels/Test/Multiplayer_Reference/Multiplayer_Reference', { } },
	{ 'Levels/Test/SP_Core_Design_Scripting/SP_Core_Design_Scripting', {"Core_CoverSelection", "Core_SquadMovement"}},
	{ 'Levels/Test/Testrange_Cover/Testrange_Cover', { } },
	{ 'Levels/Test/Testrange_MPAnimation/Testrange_MPAnimation', { } },
}

-----------------------------------------------------------------

core = require "Frost.Core"

function applySettings(settings)
	core.parseKeyValueCfgString(settings, _G)
end

local editorActive = false
local liveEditingEnable = commandLine:lookup("core.liveeditingenable")
if liveEditingEnable then
	if liveEditingEnable == "1" or liveEditingEnable == "true" then
		editorActive = true
	end
end

local function nocaseRegex(s)
  s = string.gsub(s, "%a", function (c)
        return string.format("[%s%s]", string.lower(c),
                                       string.upper(c))
      end)
  return s
end

-- Determine if a config value is true
local function cfgTrue(value)

	if type(value) == type(true) then 
		return value
	end

	if value == nil then
		return false
	end
	return (value ~= 0)
end


local function parseLevelAndStart(las)
	local query = { '@', '@' }
	local levelAndStart = { nil, nil }

	if las == nil then
		return levelAndStart
	end
	
        local i = 1

	for token in las:gmatch("[^%s,]+") do
		query[i] = nocaseRegex(token)
		i = i + 1
	end

	for _, v in ipairs(levels) do
		if nil ~= v[1]:match(query[1]) then
			levelAndStart[1] = v[1]
			for _, sv in ipairs(v[2]) do

				if nil ~= sv:match(query[2]) then
					levelAndStart[2] = sv
				end
			end
			break
		end
	end	
        return levelAndStart

end

local function mergeTable(dst_table, src_table)
	if src_table ~= nil then
		extra = dst_table.extra
		for k,v in pairs(src_table) do dst_table[k] = v end
		dst_table.extra = extra .. src_table.extra	
	end
end


if platform == 'Ps3' then
	mergeTable(cfg, cfgPs3)
end

if platform == 'Xenon' then
	mergeTable(cfg, cfgXenon)
end

if platform == 'Win32' then
	mergeTable(cfg, cfgWin32)
end

-------------------------------------------------------------------
-- cfg can be used below
-------------------------------------------------------------------

-- Don't set the level when starting from the editor
if editorActive == false then
	local levelStartInfo = parseLevelAndStart(cfg.level)
	if (levelStartInfo[1] ~= nil) then
		applySettings(string.format("Game.Level %s", levelStartInfo[1])) 
	end
	if (levelStartInfo[2] ~= nil) then
		applySettings(string.format("Game.StartPoint %s", levelStartInfo[2])) 
	end
end

if cfgTrue(cfg.remoteDesktop) then
applySettings [=[
	Window.Fullscreen 0
	Window.Width 380
	Window.Height 200
]=]
end

if cfgTrue(cfg.aiDev) then
applySettings [=[
	Client.PadRumbleEnabled 0

	DebugMenu.AlwaysAllowModeToggle 1
	Debug.TickGameByPressingT 1
	DebugMenu.ToggleFreeFlying 1

	Ai2.detailedTraceEnabled 1
	Ai2.traceBufferSizePerFrameKb 60
	Ai2.traceLengthSeconds 60
	ant.RecordReplay 1
	Ai2.drawSuppressionInfo 1
	Ai2.drawPlayerDamage 1

	#Min shelfade cl: 907708
	#Sikta med i, k, l, j pa tangentbordet.
	#Skjut med n, zooma med m.
]=]
	if cfgTrue(cfg.hugeTrace) then
	applySettings [=[
		Ai2.traceBufferSizePerFrameKb 100
		Ai2.traceLengthSeconds 300
		ant.ReplayBufferSizeClient 500000000
	]=]
	end
end


if cfgTrue(cfg.onlineDevelopment) then
applySettings [=[
	Server.IsPresenceEnabled false
	Client.IsPresenceEnabled false
	Online.Environment OnlineEnvironment_Development
	Client.LoadingTimeOut 99999
	Client.LoadedTimeOut  99999
	Client.IngameTimeOut  99999
	Server.IngameTimeOut  99999
	Server.LoadingTimeOut 99999
	Online.ClientIsPresenceEnabled false
	Origin.Enabled false
	BFServer.NoInteractivityTimeoutTime 99999
	BFServer.NoInteractivityThresholdLimit 0.0
]=]
end

if cfgTrue(cfg.scriptedPlaythrough) then
applySettings [=[
	Game.ScriptedPlaythrough 1
]=]
end

if cfgTrue(cfg.cheatAllUnlocks) then
applySettings [=[
	SyncedBFSettings.AllUnlocksUnlocked true
]=]
end

if cfgTrue(cfg.noLogging) then
applySettings [=[
	Core.LogLevel CllNone
]=]
end

if cfgTrue(cfg.dvdEmulation) then
applySettings [=[
	Core.HttpDvdSimulation 1
	Core.HttpDvdSeekPenalty 200
	MeshStreaming.DynamicLoadingEnable 0
	TextureStreaming.DynamicLoadingEnable 0
]=]
end

if cfgTrue(cfg.fastRendering) then
applySettings [=[
	Core.HardwareProfile Hardware_LowEnd
	WorldRender.ViewMode Diffuse
]=]
end

applySettings(cfg.extra)